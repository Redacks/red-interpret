{
  "scopeName": "source.red-lang",
  "patterns": [
    {
      "include": "#instruction"
    }
  ],
  "repository": {
    "instruction": {
      "patterns": [
        {
          "begin": "^\\s*\\b(Text)\\b",
          "end": "(?=$)",
          "beginCaptures": {
            "1": {
              "name": "support.type"
            }
          },
          "patterns": [
            { "include": "#identifier" },
            { "include": "#assignment" },
            { "include": "#string" }
          ]
        },
        {
          "begin": "^\\s*\\b(Zahl)\\b",
          "end": "(?=$)",
          "beginCaptures": {
            "1": {
              "name": "support.type"
            }
          },
          "patterns": [
            { "include": "#identifier" },
            { "include": "#assignment" },
            { "include": "#number" }
          ]
        },
        {
          "begin": "^\\s*\\b(Output)\\b",
          "end": "(?=$)",
          "beginCaptures": {
            "1": {
              "name": "keyword"
            }
          },
          "patterns": [{ "include": "#identifier" }]
        },
        {
          "begin": "^\\s*\\b(Input)\\b",
          "end": "(?=$)",
          "beginCaptures": {
            "1": {
              "name": "keyword"
            }
          },
          "patterns": [{ "include": "#identifier" }]
        },
        {
          "begin": "^\\s*\\b(Wenn)\\b",
          "end": "(?=$)",
          "beginCaptures": {
            "1": {
              "name": "keyword.control"
            }
          },
          "patterns": [{ "include": "#identifier" }]
        }
      ]
    },
    "identifier": {
      "patterns": [
        {
          "begin": "\\s+(?:\\b([_a-zA-Z][_a-zA-Z0-9]{0,30})\\b)",
          "end": "(?=\\s*[\\n=])",
          "captures": {
            "1": {
              "name": "variable"
            }
          }
        }
      ]
    },
    "number": {
      "patterns": [
        {
          "begin": "\\s*(\\=)\\s*",
          "captures": {
            "1": { "name": "keyword" }
          },
          "end": "(?=$)",
          "patterns": [
            { "match": "(-?\\b\\d+\\b)", "name": "constant.numeric" },
            { "include": "#mathSymbols" },
            { "include": "#inlineIdentifier" }
          ]
        }
      ]
    },
    "string": {
      "patterns": [
        {
          "begin": "\\s*(\\=)\\s*",
          "captures": {
            "1": { "name": "keyword" }
          },
          "end": "(?=$)",
          "patterns": [
            {
              "match": "\\s*([^\\s\\$\\n]*)\\s",
              "name": "string"
            },
            { "include": "#inlineIdentifier" }
          ]
        }
      ]
    },
    "mathSymbols": {
      "patterns": [
        {
          "match": "([=\\+\\-\\/\\*])",
          "captures": {
            "1": {
              "name": "keyword"
            }
          }
        }
      ]
    },
    "inlineIdentifier": {
      "match": "(\\$)([_a-zA-Z][_a-zA-Z0-9]{0,30})(\\$)",
      "captures": {
        "1": {
          "name": "keyword"
        },
        "2": {
          "name": "variable"
        },
        "3": {
          "name": "keyword"
        }
      }
    }
  }
}
